Computer Architecture Note

a. install MPLAB X IDE
https://www.microchip.com/en-us/tools-resources/develop/mplab-x-ide#tabs

b. xc8 compiler download

c. download PLCSimLab 
https://sourceforge.net/projects/picsim/

d. create projects:
AVR128DB28 -> simulators

e. source files -> create assemply.s 

---------------------------------------------------------------------------------

1. 
Equality:
	if A = B, A-B = 0 and Z = 1; else Z = 0.

Greater than /less than:
	if A < B, A - B < 0 and N =1; else N = 0.

2.
load => read value from data memory and put in a register 
store => take value from register and put it back to data memory

3.
The opcode bits determine whether an and, or, subtraction, or addition operation will be performed.

4.
The load immediate command loads a constant value directly into a register, embedding the number in the machine language instruction.

ldi <dst register> , <value>

5. stack 
is a region of data memory used to store information (i.e. variables) to run a function.
start of stack address => 0x7fff
SRAM memory = 0x4000

6. r2 - r17 and r28-r29 are called saved registers
if callee wants to use these registers, it must first save their value to stack
before returning, the original value of the registers must to stored


7. r18 - r27 and r30-r31 are call-used registers,
A Calle can overwrite these registers and does not have to restore their original values.

8. Temporary registers
r0 => can be overwritten by C functions but must be preserved by interrupts.
All Zero registers
r1 -> initialize to all zeros. it can be overwritten but must be stored to all zeros.

9. latency: The time required to perform an instruction
Throughput: Number of instructions completed per unit time
Ex: 	latency = 54 mins; 
	Throughput is 1/54mins = 1.85*10^-3 instruction/mins 

10. Data Hazards => occurs when previous command that hasn't yet made its way to pipeline.
SOLUTIONS: 
	1.stalling 
	2. forwarding: forward values between intermediate stages of pipeline
	*** use forwarding when possible, otherwise stalling

11.Control hazards, also known as branch hazards, occur in pipelined processors when            the pipeline makes wrong decisions on branch prediction, leading to the execution of incorrect instructions. This happens because the processor cannot determine the outcome of a branch instruction (e.g., jump, conditional branch) early enough to avoid the misprediction.

	1. Uncertainty about which commands to load into the pipeline is a challenge

	2. Stalling is a common method to deal with control hazards


 	3.It involves waiting for the branch decision before proceeding with the 	  pipeline

12. AVR Microcontrollers
	a. 8-bit RISC (Reduced Instruction Set Computer) architecture.
	b. Typically lower performance compared to ARM.
	c. Operate at lower clock speeds, generally up to around 20 MHz for most 	common models.
	d. Limited computational power suitable for simple and moderate complexity
	 applications.

     ARM Microcontrollers
	a. 32-bit RISC architecture
	b. More complex architecture and instruction set
	c. Operate at higher clock speeds, often exceeding 100 MHz, with advanced 	models running at several hundred MHz or even GHz

13. ARM has register file with 16 32-bit registers
	a. R0 -R3: Used for temporary values and procedures call
	b. R4 -R12: General Purpose
	c. R13: Stack Pointer
	d. R14: Used for branch instructions
	e. R15: Program Counter